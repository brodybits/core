{"version":3,"file":"composi-core.mjs.map","sources":["../src/constants.js","../src/vnode.js","../src/h.js","../node_modules/@composi/merge-objects/src/index.js","../src/vdom.js","../src/render.js","../src/runtime.js","../src/union.js","../src/effects.js","../src/fragment.js"],"sourcesContent":["/**\n * Used to determine if a vnode should be recycled.\n * @type {number}\n */\nexport const RECYCLED_NODE = 0\n\n/**\n * Used in a vnode to indicate that it is a DOM node.\n * @type {number}\n */\nexport const ELEMENT_NODE = 1\n\n/**\n * Used in a vnode to indicate that it is a text node.\n * @type {number}\n */\nexport const TEXT_NODE = 3\n\n/**\n * Namespace for SVG elements with `xlink:href` attributes.\n * @type {string}\n */\nexport const XLINK_NS = 'http://www.w3.org/1999/xlink'\n\n/**\n * Namespace for SVG elements.\n * @type {string}\n */\nexport const SVG_NS = 'http://www.w3.org/2000/svg'\n\n/**\n * An empty object. Used as placeholder for `props` in VNode.\n * @type {{}} EMPTY_OBJECT\n */\nexport const EMPTY_OBJECT = {}\n\n/**\n * An empty array. Used for access to array methods.\n * @type {any[]} EMPTY_ARRAY\n */\nexport const EMPTY_ARRAY = []\n\n/**\n * An array to store lifecycle hooks.\n * @type {any[]} LIFECYCLE\n */\nexport const LIFECYCLE = []\n","import {\n  EMPTY_OBJECT,\n  EMPTY_ARRAY,\n  TEXT_NODE,\n  RECYCLED_NODE\n} from './constants'\n\n/**\n * @typedef {Object.<string, any> | {}} Props\n * @property {Children} Props.children\n */\n/**\n * @typedef {VNode[]} Children\n */\n/**\n * @typedef {string | number | Function} Type\n * @typedef {number | string | null} Key\n * @typedef {Object.<string, any>} VNode\n * @property {Type} VNode.type\n * @property {Props} VNode.props\n * @property {Children} VNode.children\n * @property {Element} VNode.element\n * @property {Key} [VNode.key]\n * @property {number} VNode.flag\n */\n/**\n * Create a virtual node with the provided properties.\n * @param {string | Function} type\n * @param {Props} props\n * @param {Children} children\n * @param {Element} element\n * @param {string | number | null} key\n * @param {number} flag\n * @return {VNode} VNode\n */\nexport function createVNode(type, props, children, element, key, flag) {\n  if (!key) key = null\n  return {\n    type,\n    props,\n    children,\n    element,\n    key,\n    flag\n  }\n}\n\n/**\n * Create a virtual text node.\n * @param {string} text\n * @param {Element} [element]\n * @return {VNode} VNode\n */\nexport function createTextVNode(text, element) {\n  if (!element) element = null\n  return createVNode(text, EMPTY_OBJECT, EMPTY_ARRAY, element, null, TEXT_NODE)\n}\n\n/**\n * Create a virtual node represeting a DOM element and its children.\n * @param {Element} element\n * @return {VNode} VNode\n */\nexport function hydrate(element) {\n  if (typeof element === 'string') {\n    element = document.querySelector(element)\n  }\n  // Clean node before using:\n  removeWhiteSpaceNodes(element)\n  return createVNode(\n    element.nodeName.toLowerCase(),\n    EMPTY_OBJECT,\n    EMPTY_ARRAY.map.call(element.childNodes, vnodeFromChild),\n    element,\n    null,\n    RECYCLED_NODE\n  )\n}\n\n/**\n * Cycle through the child nodes of an element and create virtual nodes of them.\n * @param {Element} element\n * @return {VNode} VNode\n */\nfunction vnodeFromChild(element) {\n  if (element.nodeType === TEXT_NODE) {\n    return createTextVNode(element.nodeValue, element)\n  } else {\n    return hydrate(element)\n  }\n}\n\n/**\n * Function to remove whitespace nodes from DOM element.\n * This is to avoid unnecessary inclusion of\n * whitespace nodes in virtual node when hydrating.\n * @param {Element | Node} node\n * @returns {void} undefined\n */\nfunction removeWhiteSpaceNodes(node) {\n  for (let n = 0; n < node.childNodes.length; n++) {\n    const child = node.childNodes[n]\n    if (\n      child.nodeType === 8 ||\n      (child.nodeType === 3 && !/\\S/.test(child.nodeValue))\n    ) {\n      node.removeChild(child)\n      n--\n    } else if (child.nodeType === 1) {\n      removeWhiteSpaceNodes(child)\n    }\n  }\n}\n","import { createVNode, createTextVNode } from './vnode'\nimport { ELEMENT_NODE } from './constants'\n\n/**\n * Creates a virtual node representing a node or text node to be created.\n * @typedef {import('./vnode').VNode} VNode\n * @param {string | Function} type\n * @param {Object.<string, any>} [props]\n * @return {VNode}\n */\nexport function h(type, props, ...children) {\n  props = props || {}\n  let node\n  const tempBox = []\n  const childNodes = []\n  let length = children.length\n  const key = Reflect.get(props, 'key')\n\n  while (length-- > 0) tempBox.push(children[length])\n\n  if (Reflect.get(props, 'children')) {\n    if (tempBox.length <= 0) {\n      tempBox.push(props.children)\n    }\n    delete props.children\n  }\n\n  while (tempBox.length > 0) {\n    if (Array.isArray((node = tempBox.pop()))) {\n      let length = node.length\n      while (length-- > 0) {\n        tempBox.push(node[length])\n      }\n    } else if (node === false || node === true || node == null) {\n    } else {\n      childNodes.push(typeof node === 'object' ? node : createTextVNode(node))\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type(props, (props.children = childNodes))\n  } else {\n    return createVNode(type, props, childNodes, null, key, ELEMENT_NODE)\n  }\n}\n","/**\n * Combine two objects, merging the second into the first. Any properties already existing in the first will be replaced by those of the second. Any properties in the second not in the first will be added to it.\n * This does a deep clone. Sub arrays will be cloned. If arrays consist of objects, those will be cloned. Functions will also be cloned. This also support Maps and Sets.\n * Passing in just one object will return a deep clone of it.\n *\n * @param {Object.<string, any>[]} objects One or more objects to use for merging.\n * @return {Object.<string, any>} Object.<string, any>\n */\n\nexport function mergeObjects(...objects) {\n  const FIRST_ARGUMENT = 0\n  // Add empty array or object to arguments to ensure unique clone:\n  if (Array.isArray(objects[FIRST_ARGUMENT])) {\n    objects.unshift([])\n  } else {\n    objects.unshift({})\n  }\n\n  /**\n   * Create a clone of an object or array.\n   * @param {*} object The object to clone.\n   * @return {Object<string, any>} Object<string, any>\n   */\n\n  function createClone(object, hash = new WeakMap()) {\n    // Deal with primitive types:\n    if (Object(object) !== object) return object\n    // Deal with cyclic references:\n    if (hash.has(object)) return hash.get(object)\n    const result =\n      object instanceof Date\n        ? new Date(object)\n        : object instanceof RegExp\n        ? new RegExp(object.source, object.flags)\n        : object.constructor\n        ? new object.constructor()\n        : Object.create(null)\n    hash.set(object, result)\n    if (object instanceof Map) {\n      Array.from(object, ([key, val]) =>\n        result.set(key, createClone(val, hash))\n      )\n    }\n    if (object instanceof Set) {\n      Array.from(object, val => result.add(createClone(val, hash)))\n    }\n    return Object.assign(\n      result,\n      ...Object.keys(object).map(key => ({\n        [key]: createClone(object[key], hash)\n      }))\n    )\n  }\n  // Return cloned copy of merged objects:\n  if (Array.isArray(objects[FIRST_ARGUMENT])) {\n    return objects.reduce((a, b) => Array.prototype.concat(a, createClone(b)))\n  } else if (typeof objects[FIRST_ARGUMENT] === 'object') {\n    return objects.reduce((a, b) => Object.assign(a, createClone(b)))\n  }\n}\n\nexport const cloneObject = object => mergeObjects(object)\nexport const clone = object => mergeObjects(object)\n","import {\n  RECYCLED_NODE,\n  TEXT_NODE,\n  XLINK_NS,\n  SVG_NS,\n  LIFECYCLE\n} from './constants'\nimport { mergeObjects } from '@composi/merge-objects'\n\n/**\n * Event proxy for inline events.\n * @param {Event} event\n * @return {any} any\n */\nfunction eventProxy(event) {\n  return event.currentTarget['events'][event.type](event)\n}\n\n/**\n * Get the key value of a virtual node.\n * @typedef {import('./vnode').VNode} VNode\n * @param {VNode} vnode\n * @return {string | number | null}\n */\nfunction getKey(vnode) {\n  return vnode == null ? null : vnode.key\n}\n\n/**\n * Create a map of keyed nodes.\n * @typedef {import('./vnode').Children} Children\n * @param {Children} children\n * @param {number} startCount\n * @param {number} end\n * @return {Object.<string, any>} Object.<string, any>\n */\nfunction createKeyMap(children, startCount, end) {\n  const out = {}\n  let key\n  let vnode\n\n  while (startCount <= end) {\n    if ((key = (vnode = children[startCount]).key) != null) {\n      out[key] = vnode\n    }\n    startCount++\n  }\n\n  return out\n}\n\n/**\n * Update the properties and attributes of a VNode based on new data.\n * @param {Element} element\n * @param {string} prop\n * @param {any} oldValue\n * @param {any} newValue\n * @param {boolean} isSVG\n * @return {void} undefined\n */\nfunction setProp(element, prop, oldValue, newValue, isSVG) {\n  if (prop === 'key') {\n    return\n  } else if (prop === 'style' && typeof newValue === 'object') {\n    for (let i in mergeObjects(oldValue, newValue)) {\n      const style = newValue == null || newValue[i] == null ? '' : newValue[i]\n      if (i[0] === '-') {\n        element[prop].setProperty(i, style)\n      } else {\n        element[prop][i] = style\n      }\n    }\n  } else {\n    if (prop[0] === 'o' && prop[1] === 'n') {\n      prop = prop.slice(2).toLowerCase()\n\n      if (!element['events']) element['events'] = {}\n\n      element['events'][prop] = newValue\n\n      if (newValue == null) {\n        element.removeEventListener(prop, eventProxy)\n      } else if (oldValue == null) {\n        element.addEventListener(prop, eventProxy)\n      }\n    } else {\n      let nullOrFalse = newValue == null || newValue === false\n\n      if (prop !== 'list' && prop in element && !isSVG) {\n        element[prop] = newValue == null ? '' : newValue\n      } else if (nullOrFalse) {\n        element.removeAttribute(prop)\n      } else {\n        if (prop === 'xlink-href' || prop === 'xlinkHref') {\n          element.setAttributeNS(XLINK_NS, 'href', newValue)\n          element.setAttribute('href', newValue)\n        } else {\n          element.setAttribute(prop, newValue)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Create an element, either node or text, from a VNode.\n * @typedef {Function[]} Lifecycle\n * @param {VNode} vnode\n * @param {boolean} [isSVG]\n * @return {Element} Element\n */\nfunction createElement(vnode, isSVG) {\n  let element\n  if (vnode.flag === TEXT_NODE) {\n    element = document.createTextNode(/** @type {string} */ (vnode.type))\n  } else {\n    if ((isSVG = isSVG || vnode.type === 'svg')) {\n      element = document.createElementNS(\n        SVG_NS,\n        /** @type {string} */ (vnode.type)\n      )\n    } else {\n      element = document.createElement(/** @type {string} */ (vnode.type))\n    }\n  }\n\n  const props = vnode.props\n  if (props['onmount']) {\n    LIFECYCLE.push(function() {\n      props['onmount'](element)\n    })\n  }\n  let idx = 0\n  const length = vnode.children.length\n  while (idx < length) {\n    element.appendChild(createElement(vnode.children[idx], isSVG))\n    idx++\n  }\n\n  for (let prop in props) {\n    setProp(/** @type {Element} */ (element), prop, null, props[prop], isSVG)\n  }\n\n  return (vnode.element = /** @type {Element} */ (element))\n}\n\n/**\n * Remove children from a node.\n * @param {VNode} node\n * @return {Element}\n */\nfunction removeChildren(node) {\n  let idx = 0\n  const length = node.children.length\n  while (idx < length) {\n    removeChildren(node.children[idx])\n    idx++\n  }\n\n  return node.element\n}\n\n/**\n * Remove an element from the DOM.\n * @param {Element} parent\n * @param {VNode} vnode\n * @return {void} undefined\n */\nfunction removeElement(parent, vnode) {\n  const done = function() {\n    parent.removeChild(removeChildren(vnode))\n  }\n\n  const cb = vnode.props && vnode.props['onunmount']\n  if (cb != null) {\n    cb(done, vnode.element)\n  } else {\n    done()\n  }\n}\n\n/**\n * Update an element based on new prop values.\n * @typedef {import('./vnode').Props} Props\n * @param {Element} element\n * @param {Props} oldProps\n * @param {Props} newProps\n * @param {boolean} isSVG\n * @return {void} undefined\n */\nfunction updateElement(element, oldProps, newProps, isSVG) {\n  for (let prop in mergeObjects(oldProps, newProps)) {\n    if (\n      (prop === 'value' || prop === 'checked'\n        ? element[prop]\n        : oldProps[prop]) !== newProps[prop]\n    ) {\n      setProp(element, prop, oldProps[prop], newProps[prop], isSVG)\n    }\n  }\n\n  const cb =\n    element['vnode'] && Reflect.get(element['vnode'], 'type') === RECYCLED_NODE\n      ? newProps['onmount']\n      : newProps['onupdate']\n  if (cb != null) {\n    LIFECYCLE.push(function() {\n      cb(element, oldProps, newProps)\n    })\n  }\n}\n\n/**\n * Patch an element based on differences between its old VNode and its new one.\n * @param {Element} parent\n * @param {Element} element\n * @param {VNode} oldVNode\n * @param {VNode} newVNode\n * @param {boolean} [isSVG]\n * @return {VNode}\n */\nfunction patchElement(parent, element, oldVNode, newVNode, isSVG) {\n  if (newVNode === oldVNode) {\n  } else if (\n    oldVNode != null &&\n    oldVNode.flag === TEXT_NODE &&\n    newVNode.flag === TEXT_NODE\n  ) {\n    if (oldVNode.type !== newVNode.type) {\n      element.nodeValue = /** @type {any} */ (newVNode.type)\n    }\n  } else if (oldVNode == null || oldVNode.type !== newVNode.type) {\n    const newElement = parent.insertBefore(\n      createElement(newVNode, isSVG),\n      element\n    )\n\n    if (oldVNode != null) removeElement(parent, oldVNode)\n\n    element = newElement\n  } else {\n    updateElement(\n      element,\n      oldVNode.props,\n      newVNode.props,\n      (isSVG = isSVG || newVNode.type === 'svg')\n    )\n\n    let savedNode\n    let childNode\n\n    let lastKey\n    let lastChildren = oldVNode.children\n    let lastChildStart = 0\n    let lastChildEnd = lastChildren.length - 1\n\n    let nextKey\n    const nextChildren = newVNode.children\n    let nextChildStart = 0\n    let nextChildEnd = nextChildren.length - 1\n\n    while (nextChildStart <= nextChildEnd && lastChildStart <= lastChildEnd) {\n      lastKey = getKey(lastChildren[lastChildStart])\n      nextKey = getKey(nextChildren[nextChildStart])\n\n      if (lastKey == null || lastKey !== nextKey) break\n\n      patchElement(\n        element,\n        lastChildren[lastChildStart].element,\n        lastChildren[lastChildStart],\n        nextChildren[nextChildStart],\n        isSVG\n      )\n\n      lastChildStart++\n      nextChildStart++\n    }\n\n    while (nextChildStart <= nextChildEnd && lastChildStart <= lastChildEnd) {\n      lastKey = getKey(lastChildren[lastChildEnd])\n      nextKey = getKey(nextChildren[nextChildEnd])\n\n      if (lastKey == null || lastKey !== nextKey) break\n\n      patchElement(\n        element,\n        lastChildren[lastChildEnd].element,\n        lastChildren[lastChildEnd],\n        nextChildren[nextChildEnd],\n        isSVG\n      )\n\n      lastChildEnd--\n      nextChildEnd--\n    }\n\n    if (lastChildStart > lastChildEnd) {\n      while (nextChildStart <= nextChildEnd) {\n        element.insertBefore(\n          createElement(nextChildren[nextChildStart++], isSVG),\n          (childNode = lastChildren[lastChildStart]) && childNode.element\n        )\n      }\n    } else if (nextChildStart > nextChildEnd) {\n      while (lastChildStart <= lastChildEnd) {\n        removeElement(element, lastChildren[lastChildStart++])\n      }\n    } else {\n      const lastKeyed = createKeyMap(lastChildren, lastChildStart, lastChildEnd)\n      const nextKeyed = {}\n\n      while (nextChildStart <= nextChildEnd) {\n        lastKey = getKey((childNode = lastChildren[lastChildStart]))\n        nextKey = getKey(nextChildren[nextChildStart])\n\n        if (\n          nextKeyed[lastKey] ||\n          (nextKey != null &&\n            nextKey === getKey(lastChildren[lastChildStart + 1]))\n        ) {\n          if (lastKey == null) {\n            removeElement(element, childNode)\n          }\n          lastChildStart++\n          continue\n        }\n\n        if (nextKey == null || oldVNode.flag === RECYCLED_NODE) {\n          if (lastKey == null) {\n            patchElement(\n              element,\n              childNode && childNode.element,\n              childNode,\n              nextChildren[nextChildStart],\n              isSVG\n            )\n            nextChildStart++\n          }\n          lastChildStart++\n        } else {\n          if (lastKey === nextKey) {\n            patchElement(\n              element,\n              childNode.element,\n              childNode,\n              nextChildren[nextChildStart],\n              isSVG\n            )\n            nextKeyed[nextKey] = true\n            lastChildStart++\n          } else {\n            if ((savedNode = lastKeyed[nextKey]) != null) {\n              patchElement(\n                element,\n                element.insertBefore(\n                  savedNode.element,\n                  childNode && childNode.element\n                ),\n                savedNode,\n                nextChildren[nextChildStart],\n                isSVG\n              )\n              nextKeyed[nextKey] = true\n            } else {\n              patchElement(\n                element,\n                childNode && childNode.element,\n                null,\n                nextChildren[nextChildStart],\n                isSVG\n              )\n            }\n          }\n          nextChildStart++\n        }\n      }\n\n      while (lastChildStart <= lastChildEnd) {\n        if (getKey((childNode = lastChildren[lastChildStart++])) == null) {\n          removeElement(element, childNode)\n        }\n      }\n\n      for (let key in lastKeyed) {\n        if (nextKeyed[key] == null) {\n          removeElement(element, lastKeyed[key])\n        }\n      }\n    }\n  }\n\n  if (element) {\n    newVNode.element = element\n  }\n  return newVNode\n}\n\n/**\n * Class to throw error message when attempting to insert Fragement tag directly into DOM.\n * @return {string} message\n */\nexport class FragmentError {\n  constructor() {\n    this.message = 'Cannot insert Fragment tag directly into DOM.'\n    this.toString = function() {\n      return this.message\n    }\n  }\n}\n\n/**\n * Function to either mount an element the first time or patch it in place. This behavior depends on the value of the old VNode. If it is null, a new element will be created, otherwise it compares the new VNode with the old one and patches it.\n * @param {Element | string} container\n * @param {VNode} newVNode\n * @param {VNode} [oldVNode]\n * @return {VNode} VNode\n */\nexport function patch(oldVNode, newVNode, container) {\n  if (typeof container === 'string') {\n    container = document.querySelector(container)\n  }\n\n  if (Array.isArray(newVNode)) throw new FragmentError()\n  patchElement(container, oldVNode && oldVNode.element, oldVNode, newVNode)\n\n  if (newVNode !== oldVNode) {\n    while (LIFECYCLE.length > 0) LIFECYCLE.pop()()\n  }\n\n  return newVNode\n}\n","import { patch } from './vdom'\nimport { hydrate } from './vnode'\n\n/**\n * Render a functional component. The first argument is the component to render. This can be either a JSX tag or an `h` function. The second argument is the container to render in. An optional third argument is an element in the document loaded from the server. This will be hydrated with the component provided to render. This third argument can be a DOM referece for that element, or a valid string selector for it.\n * @example\n *\n * ```\n * // Render Title tag into section:\n * render(<Title message='Hello World!'/>, 'section')\n * // Update the title component 5 seconds later:\n * setTimeout(() => {\n *   render(<Title message='Hello Everyone!'/>, 'section')\n * }, 5000)\n * ```\n * @typedef {import('./vnode').VNode} VNode\n * @param {VNode} VNode\n * @param {Element | string} container\n * @param {Element | string} [hydrateThis]\n * @return {void} undefined\n */\nexport function render(VNode, container, hydrateThis) {\n  if (typeof container === 'string') {\n    container = document.querySelector(container)\n  } else {\n    container = container\n  }\n  if (!container) {\n    console.error(\n      '@composi/core Error: You need to provide a valid container to render the component in. Check the element or selector you provided and make sure that it exists in the DOM before trying to render.'\n    )\n    console.error(\n      `@composi/core Message: The container you provided was \"${container}\"`\n    )\n    return\n  }\n  let oldVNode\n  if (hydrateThis) {\n    if (typeof hydrateThis === 'string') {\n      hydrateThis = document.querySelector(hydrateThis)\n    }\n    oldVNode = hydrate(hydrateThis)\n  } else {\n    oldVNode = container && Reflect.get(container, 'vnode')\n  }\n  const vnode = patch(oldVNode, VNode, container)\n  container['vnode'] = vnode\n}\n","/**\n * The @composi/runtime.\n * @example\n *\n * ```\n * // Create a runtime program\n * const program = {\n *   // Define state:\n *   init() {\n *     return [{count: 0}]\n *   },\n *   // Define view to render.\n *   // Notice event to send message 'incr'.\n *   view(state, send) {\n *      return render(<div onclick={send('incr')}>The count is: {state.count}</div>, document.body)\n *   },\n *   // Define action to update state:\n *   update(state, msg) {\n *     if (msg === 'incr') {\n *        return [state.count++]\n *     }\n *   }\n * }\n * // Run the program:\n * run(program)\n * ```\n * @typedef {any} State - type any.\n * @typedef {Function} Effect - A function to execute.\n * @typedef {Object<string, any>} Program A program to run.\n * @prop {Function} Program.init\n * @prop {Function} Program.update\n * @prop {Function} Program.view\n * @prop {Function} [Program.subscriptions]\n * @prop {Function} [Program.subs] Shortcut for subscriptions.\n * @prop {Function} [Program.done]\n * @param {Program} program A program to run with four methods: `init`, `view`, `update` and `subscriptions`.\n * @return {() => void} Function to terminate runtime.\n */\nexport function run(program) {\n  const update = program.update\n  const view = program.view\n  const subscriptions = program.subscriptions || program.subs\n  const done = program.done\n  let state, effect\n  let isRunning = true\n  let isFirstRun = false\n\n  /**\n   * Send a message.\n   * @param {any} message A message of any type.\n   * @return {void} undefined\n   */\n  function send(message) {\n    if (isRunning) {\n      updateView(update(state, message, send))\n    }\n  }\n\n  /**\n   * Expose send as static function on program object.\n   * This is to let you send messages to the program\n   * from other contexts, such as in a @composi/router action.\n   */\n  program['send'] = send\n\n  /**\n   * Handle changes to state and executing effects.\n   * @param {any[]} update\n   * @return {void} undefined\n   */\n  function updateView(update) {\n    let sub\n    let init = program.init()\n    if (update) {\n      ;[state, effect] = update\n    } else if (init && init.length) {\n      ;[state, effect] = init\n      if (subscriptions && !isFirstRun) {\n        sub = subscriptions(state, send)\n        if (typeof sub === 'function') sub(state, send)\n        isFirstRun = true\n      }\n    } else {\n      state = []\n    }\n    if (effect) {\n      effect(state, send)\n    }\n    view(state, send)\n  }\n\n  updateView(state)\n\n  /**\n   * Function to end runtime.\n   * @return {void} undefined\n   */\n  return () => {\n    if (isRunning) {\n      isRunning = false\n      if (done) {\n        done(state)\n      }\n    }\n  }\n}\n","const hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Create a union of string tags.\n * @param {string[]} types\n */\nfunction createUnion(types) {\n  const variants = Object.create(null)\n  let checkTag = x => x && x.type\n\n  const matcher = (handlers, catchAll) => {\n    return (tag, context) => {\n      const tagType = checkTag(tag)\n      const match = hasOwnProperty.call(handlers, tagType) && handlers[tagType]\n      return match ? match(tag.data, context) : catchAll(context)\n    }\n  }\n\n  function match(tag, handlers, catchAll) {\n    return matcher(handlers, catchAll)(tag)\n  }\n\n  let idx = 0\n  while (idx < types.length) {\n    const type = types[idx]\n    variants[type] = data => ({ type, data })\n    idx++\n  }\n\n  return { variants, match }\n}\n\n/**\n * Create a union of types for matching up with functions.\n * @param {string[]} types\n */\nexport function union(types) {\n  const { variants, match } = createUnion(types)\n  variants.match = match\n  return variants\n}\n","/**\n * Map effects to enable composition of runtime programs.\n * @param {Function} effect\n * @param {Function} callback\n * @return {Function} Function\n */\nexport function mapEffect(effect, callback) {\n  return send => intercept => message => {\n    send(callback(message))\n    return effect(intercept)\n  }\n}\n\n/**\n * Function to batch effects together.\n * @param {Function[]} effects\n * @return {Function} Function\n */\nexport const batchEffects = effects => (state, send) =>\n  effects.map(effect => effect && effect(state, send))\n","/**\n * Returns a group of sibling elements for inclusion in another JSX tag.\n * @typedef {import('./vnode').Props} Props\n * @typedef {import('./vnode').Children} Children\n * @param {Props} props\n * @return {Children} children\n */\n/**\n * A tag to enable returning sibling elements. This is useful for returning list items to render in a list or table cells to render in a table row.\n * @example\n *\n * ```\n * <Fragment>\n *   <li>A</li>\n *   <li>B</li>\n *   <li>C</li>\n * </Fragment>\n ```\n * Or functionally:\n * ```\n * Fragment(null, [\n *   h('li', {}, 'A'),\n *   h('li', {}, 'B'),\n *   h('li', {}, 'C')\n * ])\n ```\n * @param {Object} [props] When using Fragment as a function, props is the first argument. Provide either null or {} as the value for props.\n * @param {Children} [children] The siblings to return with the Fragment. This will be an array of sibling elements.\n * @return {VNode[]} An array of virtual nodes.\n */\nexport const Fragment = (props, children) =>\n  Array.isArray(props) && !children ? props : children\n"],"names":["RECYCLED_NODE","ELEMENT_NODE","TEXT_NODE","XLINK_NS","SVG_NS","EMPTY_OBJECT","EMPTY_ARRAY","LIFECYCLE","createVNode","type","props","children","element","key","flag","createTextVNode","text","hydrate","document","querySelector","removeWhiteSpaceNodes","nodeName","toLowerCase","map","call","childNodes","vnodeFromChild","nodeType","nodeValue","node","child","n","length","test","removeChild","h","tempBox","Reflect","get","push","Array","isArray","pop","mergeObjects","objects","createClone","object","hash","WeakMap","Object","has","result","Date","RegExp","source","flags","constructor","create","set","assign","keys","unshift","reduce","a","b","prototype","concat","eventProxy","event","currentTarget","getKey","vnode","createKeyMap","startCount","end","out","setProp","prop","oldValue","newValue","isSVG","i","style","setProperty","slice","removeEventListener","addEventListener","removeAttribute","setAttributeNS","setAttribute","createElement","createTextNode","createElementNS","idx","appendChild","removeChildren","removeElement","parent","done","cb","updateElement","oldProps","newProps","patchElement","oldVNode","newVNode","newElement","insertBefore","savedNode","childNode","lastKey","nextKey","lastChildren","lastChildStart","lastChildEnd","nextChildren","nextChildStart","nextChildEnd","lastKeyed","nextKeyed","FragmentError","message","toString","patch","container","render","VNode","hydrateThis","console","error","run","program","send","isRunning","updateView","update","state","sub","init","effect","subscriptions","isFirstRun","view","subs","hasOwnProperty","createUnion","types","variants","checkTag","x","matcher","handlers","catchAll","tag","context","tagType","match","data","union","mapEffect","callback","intercept","batchEffects","effects","Fragment"],"mappings":"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"}